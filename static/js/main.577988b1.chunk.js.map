{"version":3,"sources":["component/MainAll/MainAll.js","component/MainChoose/MainChoose.js","App.js","reportWebVitals.js","index.js","component/MainAll/MainAll.module.sass"],"names":["Search","props","Paper","component","className","styles","root","InputBase","onChange","e","onSearchChange","target","value","requestSearch","input","placeholder","IconButton","iconButton","aria-label","ETFTable","TableContainer","Table","table","size","TableHead","TableRow","data","header","map","col","i","TableCell","TableBody","content","row","scope","id","title","good_worth","market_price","discount","Math","round","MainAll","useState","error","setError","isLoaded","setIsLoaded","setData","useEffect","fetch","then","res","json","result","resultData","stocks","console","log","message","Main_Choose","drawerWidth","useStyles","makeStyles","theme","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","flexGrow","contentShift","App","classes","useTheme","React","open","setOpen","CssBaseline","AppBar","position","clsx","Toolbar","color","onClick","edge","Typography","variant","noWrap","Drawer","anchor","paper","direction","Divider","List","text","link","item","index","to","ListItem","button","ListItemIcon","ListItemText","primary","exact","path","MainChoose","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.577988b1.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport DirectionsIcon from '@material-ui/icons/Directions';\r\nimport styles from './MainAll.module.sass'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { MicNone } from '@material-ui/icons';\r\nimport { ConsoleWriter } from 'istanbul-lib-report';\r\n\r\nfunction MainAll() {\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [data, setData] = useState({\r\n        header: [\r\n            \"代碼\", \"名稱\", \"淨值\", \"市值\", \"折溢價\", \"折溢%\"\r\n        ],\r\n        content: [\r\n            // {\r\n            //     id: \"0050\",\r\n            //     title: \"元大台灣50\",\r\n            //     good_worth: \"137.24\",\r\n            //     market_price: \"136.95\",\r\n            //     discount: -0.29\r\n            // }\r\n        ]\r\n    });\r\n    function handleSearchChange(value) {\r\n        console.log(value)\r\n    }\r\n    // console.log(data)\r\n    useEffect(() => {\r\n        fetch(\"http://localhost:5001/etf-kanban/us-central1/all_etf\", {})\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    setIsLoaded(true);\r\n                    setData((data) => {\r\n                        let resultData = { ...data }\r\n                        resultData.content = result.stocks\r\n                        // console.log(resultData)\r\n                        return resultData\r\n                    })\r\n                },\r\n                (error) => {\r\n                    setIsLoaded(true);\r\n                    setError(error);\r\n                }\r\n            )\r\n        return () => { console.log(\"AAA\") }\r\n    }, [])\r\n    if (error) {\r\n        return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n        return <div>Loading...</div>;\r\n    } else {\r\n        return (\r\n            <div>\r\n                <Search onSearchChange={handleSearchChange}></Search>\r\n                <ETFTable data={data}></ETFTable>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction Search(props) {\r\n    function requestSearch(e) {\r\n        props.onSearchChange(e.target.value)\r\n    }\r\n    return (\r\n        <Paper component=\"form\" className={styles.root}>\r\n            <InputBase\r\n                onChange={(e) => requestSearch(e)}\r\n                className={styles.input}\r\n                placeholder=\"Search\"\r\n            />\r\n            <IconButton className={styles.iconButton} aria-label=\"search\">\r\n                <SearchIcon />\r\n            </IconButton>\r\n        </Paper>\r\n    );\r\n}\r\n\r\n\r\n\r\nfunction ETFTable(props) {\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table className={styles.table} size=\"small\" aria-label=\"a dense table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        {props.data.header.map((col, i) => (\r\n                            <TableCell key={i}>{col}</TableCell>\r\n                        ))}\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {props.data.content.map((row) => (\r\n                        <TableRow key={row.id}>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                {row.id}\r\n                            </TableCell>\r\n                            <TableCell>{row.title}</TableCell>\r\n                            <TableCell>{row.good_worth}</TableCell>\r\n                            <TableCell>{row.market_price}</TableCell>\r\n                            <TableCell>{row.discount}</TableCell>\r\n                            <TableCell>{Math.round((row.discount / row.good_worth) * 10000) / 100}</TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table >\r\n        </TableContainer >\r\n    );\r\n}\r\n\r\nexport default MainAll;\r\n","import React from 'react';\r\n\r\nconst Main_Choose = () => {\r\n    return (\r\n        <div>\r\n            Main_Choose\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Main_Choose;\r\n","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport MainAll from './component/MainAll/MainAll'\r\nimport MainChoose from './component/MainChoose/MainChoose'\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n}));\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  var data = {\r\n    nav: {\r\n      items: [\r\n        {\r\n          text: \"全部\",\r\n          link: \"All\"\r\n        },\r\n        {\r\n          text: \"自選\",\r\n          link: \"Choose\"\r\n        }\r\n      ]\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar\r\n          position=\"fixed\"\r\n          className={clsx(classes.appBar, {\r\n            [classes.appBarShift]: open,\r\n          })}\r\n        >\r\n          <Toolbar>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={handleDrawerOpen}\r\n              edge=\"start\"\r\n              className={clsx(classes.menuButton, open && classes.hide)}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" noWrap>\r\n              ETF Kanban\r\n          </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer\r\n          className={classes.drawer}\r\n          variant=\"persistent\"\r\n          anchor=\"left\"\r\n          open={open}\r\n          classes={{\r\n            paper: classes.drawerPaper,\r\n          }}\r\n        >\r\n          <div className={classes.drawerHeader}>\r\n            <IconButton onClick={handleDrawerClose}>\r\n              {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <List>\r\n            {data.nav.items.map((item, index) => (\r\n              <Link to={item.link}>\r\n                <ListItem button key={item.text}>\r\n                  <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                  <ListItemText primary={item.text} />\r\n                </ListItem>\r\n              </Link>\r\n            ))}\r\n          </List>\r\n          <Divider />\r\n        </Drawer>\r\n        <main\r\n          className={clsx(classes.content, {\r\n            [classes.contentShift]: open,\r\n          })}\r\n        >\r\n          <div className={classes.drawerHeader} />\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n            </Route>\r\n            <Route path=\"/all\">\r\n              <MainAll></MainAll>\r\n            </Route>\r\n            <Route path=\"/choose\">\r\n              <MainChoose></MainChoose>\r\n            </Route>\r\n          </Switch>\r\n\r\n        </main>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"MainAll_root__25OU2\",\"input\":\"MainAll_input__3yzLq\"};"],"sourceRoot":""}